package com.pentalog;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;
import org.springframework.test.context.junit4.SpringRunner;

import com.pentalog.converter.AccountConverter;
import com.pentalog.model.Account;
import com.pentalog.repository.AccountRepository;
import com.pentalog.service.AccountService;

@RunWith(SpringRunner.class)
public class AccountServiceTest {

	@Mock
	AccountRepository accountRepository;

	@Mock
	AccountConverter accountConverter;

	@InjectMocks
	AccountService accountService;

	@Before
	public void setUp() {
		MockitoAnnotations.initMocks(this);
	}

	@Test
	public void testGetAccountByAccountNumberWhenNoAccountWasFound() {
		Mockito.when(accountRepository.findByAccountNumber(Mockito.any())).thenReturn(new ArrayList<Account>());
		assertEquals("If no account with the specified number was found should return Optional.empty",
				accountService.getAccountByAccountNumber(""), Optional.empty());
	}

	@Test
	public void testGetAccountByAccountNumberWhenMoreThanOneAccountWithSameNumberFound() {
		Account account=new Account();
		account.setAccountNumber("RO123");
		List<Account> accounts=new ArrayList<>();
		accounts.add(account);
		accounts.add(account);
		Mockito.when(accountRepository.findByAccountNumber(Mockito.any())).thenReturn(new ArrayList<Account>());
		assertEquals("If more than one account with the specified number was found should return Optional.empty",
				accountService.getAccountByAccountNumber("RO123"), Optional.empty());
	}
	
	@Test
	public void testGetAccountByAccountNumberWhenOneAccountFound() {
		Account account=new Account();
		account.setAccountNumber("RO123");
		List<Account> accounts=new ArrayList<>();
		accounts.add(account);
		Mockito.when(accountRepository.findByAccountNumber(Mockito.any())).thenReturn(new ArrayList<Account>());
		assertEquals("If more than one account with the specified number was found should return Optional.empty",
				accountService.getAccountByAccountNumber("RO123"), Optional.of(account));
	}

}
